import { ensureGuid } from './guid';
let proto = Object.create(null, {
    // without this, we will always still end up with (new
    // EmptyObject()).constructor === Object
    constructor: {
        value: undefined,
        enumerable: false,
        writable: true
    }
});
function EmptyObject() {}
EmptyObject.prototype = proto;
export function dict() {
    // let d = Object.create(null);
    // d.x = 1;
    // delete d.x;
    // return d;
    return new EmptyObject();
}
export class DictSet {
    constructor() {
        this.dict = dict();
    }
    add(obj) {
        if (typeof obj === 'string') this.dict[obj] = obj;else this.dict[ensureGuid(obj)] = obj;
        return this;
    }
    delete(obj) {
        if (typeof obj === 'string') delete this.dict[obj];else if (obj._guid) delete this.dict[obj._guid];
    }
}
export class Stack {
    constructor() {
        this.stack = [];
        this.current = null;
    }
    push(item) {
        this.current = item;
        this.stack.push(item);
    }
    pop() {
        let item = this.stack.pop();
        let len = this.stack.length;
        this.current = len === 0 ? null : this.stack[len - 1];
        return item === undefined ? null : item;
    }
    isEmpty() {
        return this.stack.length === 0;
    }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wYWNrYWdlcy9AZ2xpbW1lci91dGlsL2xpYi9jb2xsZWN0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxBQUFPLFNBQVcsQUFBVSxBQUFFLGtCQUFNLEFBQVEsQUFBQztBQVk3QyxJQUFJLEFBQUssZUFBVSxBQUFNLE9BQUMsQUFBSTtBQUM1QixBQUFzRDtBQUN0RCxBQUF3QztBQUN4QyxBQUFXO0FBQ1QsQUFBSyxlQUFFLEFBQVM7QUFDaEIsQUFBVSxvQkFBRSxBQUFLO0FBQ2pCLEFBQVEsa0JBQUUsQUFBSSxBQUNmLEFBQ0YsQUFBQyxBQUFDO0FBTFk7QUFIaUIsQ0FBcEIsQUFBTTtBQVVsQix1QkFBd0IsQ0FBQztBQUN6QixBQUFXLFlBQUMsQUFBUyxZQUFHLEFBQUssQUFBQztBQUU5QixBQUFNO0FBQ0osQUFBK0I7QUFDL0IsQUFBVztBQUNYLEFBQWM7QUFDZCxBQUFZO0FBQ1osQUFBTSxXQUFDLElBQUssQUFBbUIsQUFBRSxBQUFDLEFBQ3BDO0FBQUM7QUFJRCxBQUFNO0FBR0o7QUFDRSxBQUFJLGFBQUMsQUFBSSxPQUFHLEFBQUksQUFBSyxBQUFDLEFBQ3hCO0FBQUM7QUFFRCxBQUFHLFFBQUMsQUFBTTtBQUNSLEFBQUUsQUFBQyxZQUFDLE9BQU8sQUFBRyxRQUFLLEFBQVEsQUFBQyxVQUFDLEFBQUksS0FBQyxBQUFJLEtBQU0sQUFBRyxBQUFDLE9BQUcsQUFBRyxBQUFDLEFBQ3ZELEFBQUksU0FBQyxBQUFJLEtBQUMsQUFBSSxLQUFDLEFBQVUsV0FBTSxBQUFHLEFBQUMsQUFBQyxRQUFHLEFBQUcsQUFBQztBQUMzQyxBQUFNLGVBQUMsQUFBSSxBQUFDLEFBQ2Q7QUFBQztBQUVELEFBQU0sV0FBQyxBQUFNO0FBQ1gsQUFBRSxBQUFDLFlBQUMsT0FBTyxBQUFHLFFBQUssQUFBUSxBQUFDLFVBQUMsT0FBTyxBQUFJLEtBQUMsQUFBSSxLQUFNLEFBQUcsQUFBQyxBQUFDLEFBQ3hELEFBQUksVUFBQyxBQUFFLEFBQUMsSUFBRSxBQUFXLElBQUMsQUFBSyxBQUFDLE9BQUMsT0FBTyxBQUFJLEtBQUMsQUFBSSxLQUFFLEFBQVcsSUFBQyxBQUFLLEFBQUMsQUFBQyxBQUNwRTtBQUFDLEFBQ0Y7O0FBRUQsQUFBTTtBQUFOO0FBQ1UsYUFBSyxRQUFRLEFBQUUsQUFBQztBQUNqQixhQUFPLFVBQWMsQUFBSSxBQUFDLEFBa0JuQztBQUFDO0FBaEJDLEFBQUksU0FBQyxBQUFPO0FBQ1YsQUFBSSxhQUFDLEFBQU8sVUFBRyxBQUFJLEFBQUM7QUFDcEIsQUFBSSxhQUFDLEFBQUssTUFBQyxBQUFJLEtBQUMsQUFBSSxBQUFDLEFBQUMsQUFDeEI7QUFBQztBQUVELEFBQUc7QUFDRCxZQUFJLEFBQUksT0FBRyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQUcsQUFBRSxBQUFDO0FBQzVCLFlBQUksQUFBRyxNQUFHLEFBQUksS0FBQyxBQUFLLE1BQUMsQUFBTSxBQUFDO0FBQzVCLEFBQUksYUFBQyxBQUFPLFVBQUcsQUFBRyxRQUFLLEFBQUMsSUFBRyxBQUFJLE9BQUcsQUFBSSxLQUFDLEFBQUssTUFBQyxBQUFHLE1BQUcsQUFBQyxBQUFDLEFBQUM7QUFFdEQsQUFBTSxlQUFDLEFBQUksU0FBSyxBQUFTLFlBQUcsQUFBSSxPQUFHLEFBQUksQUFBQyxBQUMxQztBQUFDO0FBRUQsQUFBTztBQUNMLEFBQU0sZUFBQyxBQUFJLEtBQUMsQUFBSyxNQUFDLEFBQU0sV0FBSyxBQUFDLEFBQUMsQUFDakM7QUFBQyxBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGFzR3VpZCwgZW5zdXJlR3VpZCB9IGZyb20gJy4vZ3VpZCc7XG5pbXBvcnQgeyBPcHRpb24gfSBmcm9tICcuL3BsYXRmb3JtLXV0aWxzJztcblxuZXhwb3J0IGludGVyZmFjZSBEaWN0PFQ+IHtcbiAgW2luZGV4OiBzdHJpbmddOiBUO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNldDxUPiB7XG4gIGFkZCh2YWx1ZTogVCk6IFNldDxUPjtcbiAgZGVsZXRlKHZhbHVlOiBUKTogdm9pZDtcbn1cblxubGV0IHByb3RvID0gT2JqZWN0LmNyZWF0ZShudWxsLCB7XG4gIC8vIHdpdGhvdXQgdGhpcywgd2Ugd2lsbCBhbHdheXMgc3RpbGwgZW5kIHVwIHdpdGggKG5ld1xuICAvLyBFbXB0eU9iamVjdCgpKS5jb25zdHJ1Y3RvciA9PT0gT2JqZWN0XG4gIGNvbnN0cnVjdG9yOiB7XG4gICAgdmFsdWU6IHVuZGVmaW5lZCxcbiAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICB3cml0YWJsZTogdHJ1ZVxuICB9XG59KTtcblxuZnVuY3Rpb24gRW1wdHlPYmplY3QoKSB7fVxuRW1wdHlPYmplY3QucHJvdG90eXBlID0gcHJvdG87XG5cbmV4cG9ydCBmdW5jdGlvbiBkaWN0PFQ+KCk6IERpY3Q8VD4ge1xuICAvLyBsZXQgZCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vIGQueCA9IDE7XG4gIC8vIGRlbGV0ZSBkLng7XG4gIC8vIHJldHVybiBkO1xuICByZXR1cm4gbmV3IChFbXB0eU9iamVjdCBhcyBhbnkpKCk7XG59XG5cbmV4cG9ydCB0eXBlIFNldE1lbWJlciA9IEhhc0d1aWQgfCBzdHJpbmc7XG5cbmV4cG9ydCBjbGFzcyBEaWN0U2V0PFQgZXh0ZW5kcyBTZXRNZW1iZXI+IGltcGxlbWVudHMgU2V0PFQ+IHtcbiAgcHJpdmF0ZSBkaWN0OiBEaWN0PFQ+O1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZGljdCA9IGRpY3Q8VD4oKTtcbiAgfVxuXG4gIGFkZChvYmo6IFQpOiBTZXQ8VD4ge1xuICAgIGlmICh0eXBlb2Ygb2JqID09PSAnc3RyaW5nJykgdGhpcy5kaWN0Wzxhbnk+b2JqXSA9IG9iajtcbiAgICBlbHNlIHRoaXMuZGljdFtlbnN1cmVHdWlkKDxhbnk+b2JqKV0gPSBvYmo7XG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBkZWxldGUob2JqOiBUKSB7XG4gICAgaWYgKHR5cGVvZiBvYmogPT09ICdzdHJpbmcnKSBkZWxldGUgdGhpcy5kaWN0Wzxhbnk+b2JqXTtcbiAgICBlbHNlIGlmICgob2JqIGFzIGFueSkuX2d1aWQpIGRlbGV0ZSB0aGlzLmRpY3RbKG9iaiBhcyBhbnkpLl9ndWlkXTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU3RhY2s8VD4ge1xuICBwcml2YXRlIHN0YWNrOiBUW10gPSBbXTtcbiAgcHVibGljIGN1cnJlbnQ6IE9wdGlvbjxUPiA9IG51bGw7XG5cbiAgcHVzaChpdGVtOiBUKSB7XG4gICAgdGhpcy5jdXJyZW50ID0gaXRlbTtcbiAgICB0aGlzLnN0YWNrLnB1c2goaXRlbSk7XG4gIH1cblxuICBwb3AoKTogT3B0aW9uPFQ+IHtcbiAgICBsZXQgaXRlbSA9IHRoaXMuc3RhY2sucG9wKCk7XG4gICAgbGV0IGxlbiA9IHRoaXMuc3RhY2subGVuZ3RoO1xuICAgIHRoaXMuY3VycmVudCA9IGxlbiA9PT0gMCA/IG51bGwgOiB0aGlzLnN0YWNrW2xlbiAtIDFdO1xuXG4gICAgcmV0dXJuIGl0ZW0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBpdGVtO1xuICB9XG5cbiAgaXNFbXB0eSgpOiBib29sZWFuIHtcbiAgICByZXR1cm4gdGhpcy5zdGFjay5sZW5ndGggPT09IDA7XG4gIH1cbn1cbiJdfQ==